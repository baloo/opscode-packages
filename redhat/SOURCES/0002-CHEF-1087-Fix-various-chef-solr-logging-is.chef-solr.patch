From edeaa16de40deae4d46cf2ac6c1ddbf5e2de87b5 Mon Sep 17 00:00:00 2001
From: Matthew Kent <mkent@magoazul.com>
Date: Thu, 1 Apr 2010 13:00:49 -0700
Subject: [PATCH 2/2] CHEF-1087: Fix various chef-solr logging issues

* Log being truncated every run
* Unused file handles left open
* First few lines of Chef::Log output aren't being logged
* Account for chef-solr privileges being dropped
---
 lib/chef/solr/application/solr.rb |   32 ++++++++++++++++++++++----------
 1 files changed, 22 insertions(+), 10 deletions(-)

diff --git a/lib/chef/solr/application/solr.rb b/lib/chef/solr/application/solr.rb
index fb1fe3e..5d1d020 100644
--- a/lib/chef/solr/application/solr.rb
+++ b/lib/chef/solr/application/solr.rb
@@ -114,10 +114,20 @@ class Chef
 
         def initialize
           super
-          Chef::Log.level = Chef::Config[:log_level]
         end
 
         def setup_application
+          # Need to redirect stdout and stderr so Java process inherits them.
+          # If -L wasn't specified, Chef::Config[:log_location] will be an IO
+          # object, otherwise it will be a String.
+          #
+          # Open this as a privileged user and hang onto it
+          if Chef::Config[:log_location].kind_of?(String)
+            @logfile = File.new(Chef::Config[:log_location], "a")
+          end
+
+          Chef::Log.level = Chef::Config[:log_level]
+
           # Build up a client
           c = Chef::Client.new
           c.build_node(nil, true)
@@ -164,15 +174,6 @@ class Chef
             Chef::Daemon.daemonize("chef-solr")
           end
 
-          # Need to redirect stdout and stderr so Java process inherits them.
-          # If -L wasn't specified, Chef::Config[:log_location] will be an IO
-          # object, otherwise it will be a String.
-          if Chef::Config[:log_location].kind_of?(String)
-            logfile = File.new(Chef::Config[:log_location], "w")
-            STDOUT.reopen(logfile)
-            STDERR.reopen(logfile)
-          end
-          
           Dir.chdir(Chef::Config[:solr_jetty_path]) do
             command = "java -Xmx#{Chef::Config[:solr_heap_size]} -Xms#{Chef::Config[:solr_heap_size]}"
             command << " -Dsolr.data.dir=#{Chef::Config[:solr_data_path]}"
@@ -180,6 +181,17 @@ class Chef
             command << " #{Chef::Config[:solr_java_opts]}" if Chef::Config[:solr_java_opts]
             command << " -jar #{File.join(Chef::Config[:solr_jetty_path], 'start.jar')}"
             Chef::Log.info("Starting Solr with #{command}")
+
+            # Opened earlier before we dropped privileges
+            if @logfile 
+              # Don't need it anymore
+              Chef::Log.close
+
+              STDOUT.reopen(@logfile)
+              STDERR.reopen(@logfile)
+              @logfile.close
+            end
+
             Kernel.exec(command)
 
           end
-- 
1.6.3.3

